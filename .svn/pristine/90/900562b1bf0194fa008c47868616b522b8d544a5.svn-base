using System;
using System.Drawing;
using System.Diagnostics;
using System.Drawing.Imaging;

public class ImageParser
{
	public String Parse()
	{
        double scalefactor = 4.8;
        Bitmap b = new Bitmap("C:/Users/Michael/Desktop/Clipboard04.png");
        Color bgcolor = Color.FromArgb(182, 209, 146);
        int startingx = 0;
        Rectangle[] r = new Rectangle[5];
        for (int i = 0; i < 5; i++)
        {
            for (int y = 0; y < b.Height; y+=10)
            {
                for (int x = startingx; x < b.Width; x += 10)
                {
                    Color col = b.GetPixel(x, y);
                   
                    if (col == bgcolor)
                    {
                        r[i] = getRect(b, x, y);
                        goto breakout;

                    }
                }
            }
        breakout:
            startingx = r[i].Right + 10 ;
        
        }
        Bitmap result = new Bitmap((int)(b.Width * scalefactor), (int)(b.Height * scalefactor));
        using (Graphics g = Graphics.FromImage((Image)result))
            g.DrawImage(b, 0, 0, (int)(b.Width * scalefactor), (int)(b.Height * scalefactor));
        result.Save("C:/Users/Michael/Desktop/Clipboard02.png", ImageFormat.Png);
        b.Dispose();
        result.Dispose();
        Process p = new Process();
        p.StartInfo.WorkingDirectory = "C:/Users/Michael/Desktop/";
        p.StartInfo.FileName="C:/Program Files (x86)/Tesseract-OCR/tesseract.exe";
        p.StartInfo.Arguments = "Clipboard02.png outputtext";
        p.Start();
        p.WaitForExit();
        System.IO.StreamReader sr = new System.IO.StreamReader("C:/Users/Michael/Desktop/outputtext.txt");
        return sr.ReadToEnd();
	}

    private Rectangle getRect(Bitmap b, int x, int y)
    {
        int x1 = x; int y1 = y;
        Color c = Color.FromArgb(255, 255, 255, 255);
        Color c2 = Color.FromArgb(255, 95, 154, 35);
        Color cCurrent = Color.FromArgb(0, 0, 0, 0);
        while (cCurrent != c2 && cCurrent != c) { cCurrent = b.GetPixel(--x1, y1); }
        int left = x1;
        x1 = x; y1 = y;
        cCurrent = Color.FromArgb(0, 0, 0, 0);
        while (cCurrent != c2 && cCurrent != c) { cCurrent = b.GetPixel(x1, --y1); }
        int top = y1;
        x1 = x; y1 = y;
        cCurrent = Color.FromArgb(0, 0, 0, 0);
        while (cCurrent != c2 && cCurrent != c) { cCurrent = b.GetPixel(++x1, y1); }
        int right = x1;
        x1 = x; y1 = y;
        cCurrent = Color.FromArgb(0, 0, 0, 0);
        while (cCurrent != c2 && cCurrent != c) { cCurrent = b.GetPixel(x1, ++y1); }
        int bottom = y1;
        return new Rectangle(left, top, right - left, bottom - top);
    }
}
